# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2.1
orbs:
  heroku: circleci/heroku@0.0.6
jobs:
  backend:
    working_directory: ~/repo
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.6.2-node
        environment:
          PGHOST: 127.0.0.1
          PGUSER: psy
          RAILS_ENV: test
      - image: circleci/postgres:9.4
        environment:
          POSTGRES_USER: psy
          POSTGRES_DB: psy_test
          POSTGRES_PASSWORD: ""

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # run tests!
      - run:
          name: run backend tests
          command: |
            mkdir ~/rspec
            # TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            # bundle exec rspec -- ${TESTFILES}
            # echo '============Test Files================'
            # echo $TEST_FILES | cat -vte
            # echo '============/Test Files==============='
            # TESTFILES=$(circleci tests glob "spec/**/*.rb" | circleci tests split --split-by=timings)
            bundle exec rspec --format progress --format RspecJunitFormatter -o ~/rspec/rspec.xml
          when: always
      # collect reports
      - store_test_results:
          path: ~/rspec/
      - store_artifacts:
          path: ~/rspec/
          destination: test-results

  frontend:
    working_directory: ~/mern-starter
    docker:
      - image: circleci/node:10.13.0
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install everything
          command: yarn install
      - run:
          name: install JUnit coverage reporter
          command: yarn add --dev jest-junit
      - run:
          name: Prepare test report
          command: mkdir -p ./reports/junit
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Run tests with JUnit as reporter
          environment:
            JEST_JUNIT_OUTPUT: "reports/junit/js-test-results.xml"
          command: ./node_modules/.bin/jest --ci -runInBand --reporters=default --reporters=jest-junit
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

  deploy_staging:
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - heroku/deploy-via-git:
          only-branch: master
          app-name: psy-staging

  deploy_production:
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - heroku/deploy-via-git:
          only-branch: master
          app-name: psy

workflows:
  build_accept_deploy:
    jobs:
      - frontend
      - backend
      - deploy_staging:
          filters:
            branches:
              only:
                - master
          requires:
            - frontend
            - backend
      - approval:
          type: approval
          requires:
            - deploy_staging
      - deploy_production:
          filters:
            branches:
              only:
                - master
          requires:
            - approval
